rbm_remote(7)
=============

NAME
----
rbm_remote - rbm remote build

DESCRIPTION
-----------

It can be useful to run the build of your package on an external server,
a VM or a chroot. For instance if you are running an rpm based
distribution and want to build a Debian package.

To do do this, you can define the +remote_exec+ option.

The following options are used to configure the remote execution of the
build:

remote_exec::
        the template of a command used to execute a command on a remote
        host. The command to be executed is available in the option
        +exec_cmd+. The option +exec_as_root+ indicate whether the script
        should be run as a normal user, or as root. Some commands such
        as the pre and post scripts need to be run as root. The name of
        the command we are running is available in the option +exec_name+.

remote_mktemp::
        the template of a command to create a temporary directory. If
        undefined, `mktemp -d` will be used.

remote_put::
        the template of a command used to put a file on a remote host.
        The source file is available in the +put_src+ option and the
        destination directory in the +put_dst+ option. The default is
        to use tar with the +remote_exec+ option.

remote_get::
        the template of a command used to fetch a file from a remote host.
        The source directory is available in the +get_src+ option, and the
        destination directory in the +get_dst+ option. The default is
        to use tar with the +remote_exec+ option.

remote_start::
        the template of a command that will start the remote host before
        we can access it. This can be useful for instance if you need
        to start a VM, or fetch a container.

remote_finish::
        the template of a command that will stop the remote host after
        we finished the build. This can be useful for instance if you
        want to shutdown a VM or remove a temporary container.

The +remote_*+ options can access the +build_id+ option which is a
unique identifier of the current build.


REMOTE BUILD WITH SSH
---------------------

Some predefined +remote_exec+ templates are available in the option
*remote_ssh*. For instance if you want to build your debian packages on
a remote node with ssh, add the following lines to your configuration :

----
ssh_host: some_hostname
steps:
  deb_src:
     remote_exec: "[% c('remote_ssh') %]"
----

The +remote_ssh+ option will use the following options :

ssh_host::
        The hostname where to connect. It can also contain a username.

ssh_port::
        Optionally you can set a port using this option. You could also
        do it by editing your +.ssh/config+ file.

ssh_options::
        Optionally you can set some ssh options, for the exec command.


BUILD IN A CHROOT
-----------------

You can use the +remote_chroot+ option if you want to build in a chroot.
This option requires that you have sudo access to the chroot command.

The following options are used by the +remote_chroot+ option:

chroot_path::
        The path to the chroot directory.

chroot_user::
        The user in the chroot which should run the build.

Example:

----
chroot_path: /chroots/debian-wheezy
chroot_user: build
steps:
  deb:
    remote_exec: '[% c("remote_chroot") %]'
----


SEE ALSO
--------
link:rbm.html[rbm(1)],
link:rbm_config.html[rbm_config(7)]
