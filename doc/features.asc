tarball creation::
        Create tarballs for your software using a simple command and a
        git revision.

automatic verification of gpg signatures::
        If your git commits or git tags are gpg signed, the signature
        can be automatically checked using a specified keyring.

package creation::
        Create binary or source packages from any git revision using a
        simple command.

multi-os support::
        RPM and debian packages are currently supported. Support for
        more packaging systems could easily be added. Using package
        templates and the http://www.template-toolkit.org/[Template
        Toolkit], you can make different packages for different
        distributions using the same files. The syntax of this templating
        system is much more clear and powerful than the RPM macros
        syntax.

remote builds::
        Build your software on a remote server with ssh, or in a local
        chroot using a different OS. For instance if you are using
        mkpkg on an rpm based distribution, this allows you to build
        debian packages from the same workspace, using a Debian chroot.

customizable::
        Almost everything mkpkg do can be changed using some optional
        settings, globally, or for some selected projects or OSs.

simple configuration::
        The configuration is done using simple YAML files.

a flexible configuration system::
        All settings can be set globally, per workspace, project, or
        target operating system.

a dynamic configuration system::
        All configuration settings are templates. You can reuse other
        configuration settings, or the output of some commands in those
        settings. For instance, the version number of your software can
        be set using a command to grep the README file in your sources
        tree.

