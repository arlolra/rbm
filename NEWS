
- Move %default_config into a separate file


Version 0.3

- Make it possible to use templating in output_dir option

- Use YAML::XS rather than YAML perl module

- Add the tmpl function in templates

- Fix lookup of '0' or empty options

- It is now possible to put a function reference in the default
  configuration. When accessing a configuration option (or one of the
  elements in the path) that is a function, the function is executed
  and the return of the function is used as the value. The function
  takes as first argument the project's name, and on other arguments
  the path to the config option.

- The describe option is now a perl function. This allows us to remove
  some explicit calls to the git_describe function, and make sure that
  it is called any time the describe values are used. This makes the
  "mkpkg showconf [project] rpmspec" command work in all cases (before
  that there could be problems as the describe option was not set).

- Add the deb-src command, to create a debian source package

- Add optional system configuration file /etc/mkpkg.conf

- Automatically create output_dir and git_clone_dir if they don't
  already exist.

- Add the deb command, to create a debian package. With the debsign_keyid
  option to select the gpg id to sign the packages, and the use_pbuilder
  option to select whether pbuilder should be used.

- Add the rpm_rel option


Version 0.2

- The showconf command can now be used to display specific config for
  a project.

- All configuration options are now templates. The content of the rpm
  spec file, and the build scripts are now configuration options which
  by default use an include directive to include a template file.

- Add the exit_error function in templates

- Add the exec function in templates. This function takes a command as
  argument, run it inside the sources tree and return the output. The
  version option which was handled as a special case in the source code
  to execute the command defined in version_command if it is defined is
  now a normal option thanks to the exec function.

- Add the fetch option, to tell whether new commits from remote git
  repository should be fetched automatically.

- Add the fetch command, to fetch new commits from a git repository

- rpm build is now done using a script, with template in the rpmbuild
  option, which can be customized if necessary.

- Use commit time as modification time on source tarball and rpm spec
  files. The timestamp option can be used to set this to an other value.

- Add the path function in templates

- Use a wrapper to run gpg from git. This allow us to use specific
  keyring files for some projects. While doing this we add the
  gpg_wrapper, gpg_keyring, gpg_keyring_dir, gpg_args, gpg_bin options.

- It's now possible to filter good gpg keys IDs with tag_gpg_id and
  commit_gpg_id with short or long IDs, or full fingerprint. Previously
  it was done using short IDs only.

- tag_gpg_id and commit_gpg_id can be set to 1 to accept signature from
  any key in the keyring.


Version 0.1

- first version

